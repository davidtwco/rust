error: lifetime bound not satisfied
  --> $DIR/higher-ranked-auto-trait-3.rs:54:5
   |
LL | /     fn call_1<'s, 'cx>(&'s self, cx: &'cx ()) -> Self::Future1<'cx>
LL | |     where
LL | |         's: 'cx,
   | |________________^
   |
note: the lifetime `'cx` defined here...
  --> $DIR/higher-ranked-auto-trait-3.rs:43:13
   |
LL |     for<'s, 'cx> FI1::Future<'s, 'cx>: Send,
   |             ^^^
note: ...must outlive the lifetime `'s` defined here
  --> $DIR/higher-ranked-auto-trait-3.rs:43:9
   |
LL |     for<'s, 'cx> FI1::Future<'s, 'cx>: Send,
   |         ^^
   = note: this is a known limitation that will be removed in the future (see issue #100013 <https://github.com/rust-lang/rust/issues/100013> for more information)

error: lifetime bound not satisfied
  --> $DIR/higher-ranked-auto-trait-3.rs:54:5
   |
LL | /     fn call_1<'s, 'cx>(&'s self, cx: &'cx ()) -> Self::Future1<'cx>
LL | |     where
LL | |         's: 'cx,
   | |________________^
   |
note: the lifetime `'cx` defined here...
  --> $DIR/higher-ranked-auto-trait-3.rs:43:13
   |
LL |     for<'s, 'cx> FI1::Future<'s, 'cx>: Send,
   |             ^^^
note: ...must outlive the lifetime `'s` defined here
  --> $DIR/higher-ranked-auto-trait-3.rs:43:9
   |
LL |     for<'s, 'cx> FI1::Future<'s, 'cx>: Send,
   |         ^^
   = note: this is a known limitation that will be removed in the future (see issue #100013 <https://github.com/rust-lang/rust/issues/100013> for more information)
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: lifetime bound not satisfied
  --> $DIR/higher-ranked-auto-trait-3.rs:63:5
   |
LL | /     fn call_2<'s, 'cx>(&'s self, cx: &'cx ()) -> Self::Future2<'cx>
LL | |     where
LL | |         's: 'cx,
   | |________________^
   |
note: the lifetime `'cx` defined here...
  --> $DIR/higher-ranked-auto-trait-3.rs:43:13
   |
LL |     for<'s, 'cx> FI1::Future<'s, 'cx>: Send,
   |             ^^^
note: ...must outlive the lifetime `'s` defined here
  --> $DIR/higher-ranked-auto-trait-3.rs:43:9
   |
LL |     for<'s, 'cx> FI1::Future<'s, 'cx>: Send,
   |         ^^
   = note: this is a known limitation that will be removed in the future (see issue #100013 <https://github.com/rust-lang/rust/issues/100013> for more information)

error: lifetime bound not satisfied
  --> $DIR/higher-ranked-auto-trait-3.rs:63:5
   |
LL | /     fn call_2<'s, 'cx>(&'s self, cx: &'cx ()) -> Self::Future2<'cx>
LL | |     where
LL | |         's: 'cx,
   | |________________^
   |
note: the lifetime `'cx` defined here...
  --> $DIR/higher-ranked-auto-trait-3.rs:43:13
   |
LL |     for<'s, 'cx> FI1::Future<'s, 'cx>: Send,
   |             ^^^
note: ...must outlive the lifetime `'s` defined here
  --> $DIR/higher-ranked-auto-trait-3.rs:43:9
   |
LL |     for<'s, 'cx> FI1::Future<'s, 'cx>: Send,
   |         ^^
   = note: this is a known limitation that will be removed in the future (see issue #100013 <https://github.com/rust-lang/rust/issues/100013> for more information)
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: lifetime bound not satisfied
  --> $DIR/higher-ranked-auto-trait-3.rs:40:31
   |
LL | impl<FI1, FI2> IterCaller for UseIter<FI1, FI2>
   |                               ^^^^^^^^^^^^^^^^^
   |
note: the lifetime `'cx` defined here...
  --> $DIR/higher-ranked-auto-trait-3.rs:43:13
   |
LL |     for<'s, 'cx> FI1::Future<'s, 'cx>: Send,
   |             ^^^
note: ...must outlive the lifetime `'s` defined here
  --> $DIR/higher-ranked-auto-trait-3.rs:43:9
   |
LL |     for<'s, 'cx> FI1::Future<'s, 'cx>: Send,
   |         ^^
   = note: this is a known limitation that will be removed in the future (see issue #100013 <https://github.com/rust-lang/rust/issues/100013> for more information)

error: lifetime bound not satisfied
  --> $DIR/higher-ranked-auto-trait-3.rs:46:5
   |
LL |     type Future1<'cx> = impl Future<Output = ()> + Send + 'cx
   |     ^^^^^^^^^^^^^^^^^
   |
note: the lifetime `'cx` defined here...
  --> $DIR/higher-ranked-auto-trait-3.rs:43:13
   |
LL |     for<'s, 'cx> FI1::Future<'s, 'cx>: Send,
   |             ^^^
note: ...must outlive the lifetime `'s` defined here
  --> $DIR/higher-ranked-auto-trait-3.rs:43:9
   |
LL |     for<'s, 'cx> FI1::Future<'s, 'cx>: Send,
   |         ^^
   = note: this is a known limitation that will be removed in the future (see issue #100013 <https://github.com/rust-lang/rust/issues/100013> for more information)

error: lifetime bound not satisfied
  --> $DIR/higher-ranked-auto-trait-3.rs:50:5
   |
LL |     type Future2<'cx> = impl Future<Output = ()> + Send + 'cx
   |     ^^^^^^^^^^^^^^^^^
   |
note: the lifetime `'cx` defined here...
  --> $DIR/higher-ranked-auto-trait-3.rs:43:13
   |
LL |     for<'s, 'cx> FI1::Future<'s, 'cx>: Send,
   |             ^^^
note: ...must outlive the lifetime `'s` defined here
  --> $DIR/higher-ranked-auto-trait-3.rs:43:9
   |
LL |     for<'s, 'cx> FI1::Future<'s, 'cx>: Send,
   |         ^^
   = note: this is a known limitation that will be removed in the future (see issue #100013 <https://github.com/rust-lang/rust/issues/100013> for more information)

error: lifetime bound not satisfied
  --> $DIR/higher-ranked-auto-trait-3.rs:54:50
   |
LL |     fn call_1<'s, 'cx>(&'s self, cx: &'cx ()) -> Self::Future1<'cx>
   |                                                  ^^^^^^^^^^^^^^^^^^
   |
note: the lifetime `'cx` defined here...
  --> $DIR/higher-ranked-auto-trait-3.rs:43:13
   |
LL |     for<'s, 'cx> FI1::Future<'s, 'cx>: Send,
   |             ^^^
note: ...must outlive the lifetime `'s` defined here
  --> $DIR/higher-ranked-auto-trait-3.rs:43:9
   |
LL |     for<'s, 'cx> FI1::Future<'s, 'cx>: Send,
   |         ^^
   = note: this is a known limitation that will be removed in the future (see issue #100013 <https://github.com/rust-lang/rust/issues/100013> for more information)

error: lifetime bound not satisfied
  --> $DIR/higher-ranked-auto-trait-3.rs:63:50
   |
LL |     fn call_2<'s, 'cx>(&'s self, cx: &'cx ()) -> Self::Future2<'cx>
   |                                                  ^^^^^^^^^^^^^^^^^^
   |
note: the lifetime `'cx` defined here...
  --> $DIR/higher-ranked-auto-trait-3.rs:43:13
   |
LL |     for<'s, 'cx> FI1::Future<'s, 'cx>: Send,
   |             ^^^
note: ...must outlive the lifetime `'s` defined here
  --> $DIR/higher-ranked-auto-trait-3.rs:43:9
   |
LL |     for<'s, 'cx> FI1::Future<'s, 'cx>: Send,
   |         ^^
   = note: this is a known limitation that will be removed in the future (see issue #100013 <https://github.com/rust-lang/rust/issues/100013> for more information)

error: higher-ranked subtype error
  --> $DIR/higher-ranked-auto-trait-3.rs:54:5
   |
LL | /     fn call_1<'s, 'cx>(&'s self, cx: &'cx ()) -> Self::Future1<'cx>
LL | |     where
LL | |         's: 'cx,
   | |________________^

error: higher-ranked subtype error
  --> $DIR/higher-ranked-auto-trait-3.rs:54:5
   |
LL | /     fn call_1<'s, 'cx>(&'s self, cx: &'cx ()) -> Self::Future1<'cx>
LL | |     where
LL | |         's: 'cx,
   | |________________^
   |
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: lifetime bound not satisfied
  --> $DIR/higher-ranked-auto-trait-3.rs:58:9
   |
LL | /         async {
LL | |             self.fi_1.get_iter(cx).await;
LL | |         }
   | |_________^
   |
note: the lifetime `'cx` defined here...
  --> $DIR/higher-ranked-auto-trait-3.rs:43:13
   |
LL |     for<'s, 'cx> FI1::Future<'s, 'cx>: Send,
   |             ^^^
note: ...must outlive the lifetime `'s` defined here
  --> $DIR/higher-ranked-auto-trait-3.rs:43:9
   |
LL |     for<'s, 'cx> FI1::Future<'s, 'cx>: Send,
   |         ^^
   = note: this is a known limitation that will be removed in the future (see issue #100013 <https://github.com/rust-lang/rust/issues/100013> for more information)

error: lifetime bound not satisfied
  --> $DIR/higher-ranked-auto-trait-3.rs:58:9
   |
LL | /         async {
LL | |             self.fi_1.get_iter(cx).await;
LL | |         }
   | |_________^
   |
note: the lifetime `'cx` defined here...
  --> $DIR/higher-ranked-auto-trait-3.rs:43:13
   |
LL |     for<'s, 'cx> FI1::Future<'s, 'cx>: Send,
   |             ^^^
note: ...must outlive the lifetime `'s` defined here
  --> $DIR/higher-ranked-auto-trait-3.rs:43:9
   |
LL |     for<'s, 'cx> FI1::Future<'s, 'cx>: Send,
   |         ^^
   = note: this is a known limitation that will be removed in the future (see issue #100013 <https://github.com/rust-lang/rust/issues/100013> for more information)
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: higher-ranked subtype error
  --> $DIR/higher-ranked-auto-trait-3.rs:63:5
   |
LL | /     fn call_2<'s, 'cx>(&'s self, cx: &'cx ()) -> Self::Future2<'cx>
LL | |     where
LL | |         's: 'cx,
   | |________________^

error: higher-ranked subtype error
  --> $DIR/higher-ranked-auto-trait-3.rs:63:5
   |
LL | /     fn call_2<'s, 'cx>(&'s self, cx: &'cx ()) -> Self::Future2<'cx>
LL | |     where
LL | |         's: 'cx,
   | |________________^
   |
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: lifetime bound not satisfied
  --> $DIR/higher-ranked-auto-trait-3.rs:67:9
   |
LL | /         async {
LL | |             self.fi_2.get_iter(cx).await;
LL | |         }
   | |_________^
   |
note: the lifetime `'cx` defined here...
  --> $DIR/higher-ranked-auto-trait-3.rs:43:13
   |
LL |     for<'s, 'cx> FI1::Future<'s, 'cx>: Send,
   |             ^^^
note: ...must outlive the lifetime `'s` defined here
  --> $DIR/higher-ranked-auto-trait-3.rs:43:9
   |
LL |     for<'s, 'cx> FI1::Future<'s, 'cx>: Send,
   |         ^^
   = note: this is a known limitation that will be removed in the future (see issue #100013 <https://github.com/rust-lang/rust/issues/100013> for more information)

error: lifetime bound not satisfied
  --> $DIR/higher-ranked-auto-trait-3.rs:67:9
   |
LL | /         async {
LL | |             self.fi_2.get_iter(cx).await;
LL | |         }
   | |_________^
   |
note: the lifetime `'cx` defined here...
  --> $DIR/higher-ranked-auto-trait-3.rs:43:13
   |
LL |     for<'s, 'cx> FI1::Future<'s, 'cx>: Send,
   |             ^^^
note: ...must outlive the lifetime `'s` defined here
  --> $DIR/higher-ranked-auto-trait-3.rs:43:9
   |
LL |     for<'s, 'cx> FI1::Future<'s, 'cx>: Send,
   |         ^^
   = note: this is a known limitation that will be removed in the future (see issue #100013 <https://github.com/rust-lang/rust/issues/100013> for more information)
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: aborting due to 17 previous errors

